---

version: "2.1"

orbs:
  maven:
    commands:
      with_cache:
        parameters:
          steps:
            type: steps
        steps:
          - restore_cache:
              key: m2-{{ checksum "pom.xml" }}
          - run:
              name: Install dependencies
              command: mvn dependency:go-offline
          - save_cache:
              paths:
                - ~/.m2
              key: m2-{{ checksum "pom.xml" }}
          - steps: << parameters.steps >>

workflows:
  ci:
    jobs:
      - lint
      - package:
          requires:
            - lint
      - containerize:
          context: image-publishing
          requires:
            - package

jobs:
  lint:
    docker:
      - image: maven:3-jdk-11-slim
        entrypoint: bash
    steps:
      - run:
          name: Install git
          command: |
            apt-get update -y
            apt-get install -y --no-install-recommends git
      - checkout
      - maven/with_cache:
          steps:
            - run: mvn -o process-sources
      - run:
          name: Ensure no source code was rewritten
          command: |
            if [ -n "$(git status --short)" ]; then
              git status
              exit 1
            fi
  package:
    docker:
      - image: maven:3-jdk-11-slim
        entrypoint: bash
    steps:
      - checkout
      - maven/with_cache:
          steps:
            - run: mvn -o package -Dcircleci.build.number=${CIRCLE_BUILD_NUM}
      - run:
          name: Run the service check command with a config
          command: |
            export CIRCLECI_API_TOKEN=circleci-token
            export GITLAB_AUTH_TOKEN=gitlab-token
            java -jar target/gitlab-single-org-connector*.jar \
                 check src/main/resources/default-container-config.yml
            java -jar target/gitlab-single-org-connector*.jar \
                 check src/test/resources/complete-config.yml
      - run:
          name: Save the version
          command: |
            mvn -o help:evaluate \
              -Dexpression=project.version \
              -q \
              -DforceStdout > target/version
            echo ".${CIRCLE_BUILD_NUM}" >> target/version
      - store_test_results:
          path: target/surefire-reports
      - store_artifacts:
          path: target
      - run:
          name: Upload coverage data
          command: bash <(curl -s https://codecov.io/bash)
      - persist_to_workspace:
          root: target
          paths:
            - "*.jar"
            - version
  containerize:
    docker:
      - image: docker:19
    steps:
      - checkout
      - attach_workspace:
          at: target
      - setup_remote_docker
      - run:
          name: Compute the docker tag
          command: |
            (
              echo -n 'circleci/gitlab-single-org-connector:'
              cat target/version
            ) > docker.tag
      - run:
          name: Authenticate with Docker Hub
          command: |
            docker login \
              --username "${DOCKER_LOGIN}" \
              --password "${DOCKER_PASSWORD}"
      - run:
          name: Build Docker container
          command: |
            docker build \
              --build-arg JAR=target/gitlab-single-org-connector*.jar \
              --build-arg DEFAULT_CONFIG=src/main/resources/default-container-config.yml \
              --tag "$(cat docker.tag)" \
              .
      - run:
          name: Run service check command in container
          command: |
            docker run -it \
              --env CIRCLECI_API_TOKEN=circleci-token \
              --env GITLAB_AUTH_TOKEN=gitlab-token \
              --rm "$(cat docker.tag)" check /default_config.yml
      - run:
          name: Push container if we're on master
          command: |
            if [ "${CIRCLE_BRANCH}" = "master" ]; then
              docker push "$(cat docker.tag)"
            fi
